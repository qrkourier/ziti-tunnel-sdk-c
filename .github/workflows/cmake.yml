name: CI build

on:
  push:
    branches: [ '**' ]

  pull_request:
    branches: [ main ]

jobs:
  # this job:
  # + is parallel to the Linux packager job which builds its own binaries,
  # + only builds ziti-edge-tunnel for x86 on MacOS, Windows, and for Linux on arm, arm64
  # note that the Linux matrices for arm, arm64 may eventually move to a packager job if
  #   want to also support deb, rpm for arm, arm64
  bin-builder:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macOS-10.15
            cmake_opts: null
            arch: x86_64
            toolchain: default.cmake

          - os: windows-latest
            cmake_opts: -G "MinGW Makefiles" -DCMAKE_INSTALL_PREFIX=${{ github.workspace }}\install
            toolchain: default.cmake
            arch: x86_64

          - os: ubuntu-18.04
            crossbuild: crossbuild-essential-armhf
            toolchain: Linux-arm.cmake
            cmake_opts: -DCMAKE_BUILD_TYPE=Release
            arch: arm

          - os: ubuntu-18.04
            crossbuild: crossbuild-essential-arm64
            toolchain: Linux-arm64.cmake
            cmake_opts: -DCMAKE_BUILD_TYPE=Release
            arch: arm64

    steps:
      - name: checkout workspace
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: make build dir
        run: cmake -E make_directory ${{github.workspace}}/build

      - name: install Debian crossbuild toolchain
        if: ${{ matrix.crossbuild != null }}
        run: |
          sudo apt -y update
          sudo apt -y install ${{ matrix.crossbuild }}

      - name: configure cmake
        run: cmake ${{matrix.cmake_opts}} -DCMAKE_TOOLCHAIN_FILE=${{github.workspace}}/toolchains/${{matrix.toolchain}} -S ${{ github.workspace }} -B ${{github.workspace}}/build

      - name: build ziti-edge-tunnel bundle target
        # yields two files with names computed by cmake like:
        # 1) ./build/bundle/ziti-edge-tunnel-OS_ARCH.zip
        # 2) ./build/bundle/ziti-edge-tunnel-test-OS_ARCH.zip
        # where:
        # - OS: Windows
        #   ARCH: AMD64
        # - OS: Darwin
        #   ARCH: x86_64
        # - OS: Linux
        #   ARCH: arm
        # - OS: Linux
        #   ARCH: aarch64
        run: cmake --build ${{github.workspace}}/build --target bundle --verbose

      - name: list bundle artifacts
        run: ls -R
        working-directory: ${{ github.workspace }}/build/bundle/

      - name: upload bundle artifacts
        uses: actions/upload-artifact@v3
        with:
          # puts one object with a key based on the workflow context properties
          # shown in "name" in a zip archive containing two zip artifacts from
          # the bundle target
          name: ${{ runner.os }}-${{ matrix.arch }}-zip
          path: |
            ${{ github.workspace }}/build/bundle/ziti-edge-tunnel-*.zip
          if-no-files-found: error

  package:
    runs-on: ubuntu-20.04
    container: ${{ matrix.distro.container }}
    strategy:
      fail-fast: false
      matrix:
        arch: [ x86_64 ] # TODO: migrate the Linux builds for arm, arm64 too
        distro:
          - name: ubuntu
            version: "20.04"
            type: deb
            container: ${{ matrix.distro.name }}:${{ matrix.distro.version }}
          - name: ubuntu
            version: "18.04"
            type: deb
          - name: ubuntu
            version: "16.04"
            type: deb
          - name: ubuntu
            version: "14.04"
            type: deb
          - name: redhat
            version: "7"
            type: rpm
            container: quay.io/centos/centos:7
          - name: redhat
            verwsion: "8"
            type: rpm
            container: quay.io/rockylinux/rockylinux:8
    steps:
      - name: checkout workspace
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: checkout build action
        uses: actions/checkout@v2
        with:
#          repository: openziti/openziti-tunnel-build-action
          repository: qrkourier/openziti-tunnel-build-action
          ref: v0.1.0
          path: actions/openziti/openziti-tunnel-build-action

      - name: configure build action for distro version
        env:
          DISTRO_LABEL: ${{ format('{0}:{1}', matrix.distro.name, matrix.distro.version) }}
        shell: bash
        run: |
          for FILE in Dockerfile entrypoint.sh; do
            mv -v ${GITHUB_WORKSPACE}/actions/openziti/openziti-tunnel-build-action/${FILE}.${DISTRO_LABEL} \
                ${GITHUB_WORKSPACE}/actions/openziti/openziti-tunnel-build-action/${FILE}
          done

      - name: build binary and package
        uses: ./actions/openziti/openziti-tunnel-build-action

      - name: list build artifacts
        run: |
          cat /etc/*-release
          ls -horAS ${GITHUB_WORKSPACE}/build/

      - name: list program artifacts
        run: |
          cat /etc/*-release
          ls -horAS ${GITHUB_WORKSPACE}/build/programs/ziti-edge-tunnel/

      - name: run binary artifact
        run: |
          cat /etc/*-release
          ${GITHUB_WORKSPACE}/build/programs/ziti-edge-tunnel/ziti-edge-tunnel version

      - name: upload ziti-edge-tunnel binary
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.distro.name }}-${{ matrix.distro.version }}-${{ matrix.arch }}-bin
          path: |
            ${GITHUB_WORKSPACE}/build/programs/ziti-edge-tunnel/ziti-edge-tunnel
          if-no-files-found: error

      - name: upload ziti-edge-tunnel package
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.distro.name }}-${{ matrix.distro.version }}-${{ matrix.arch }}-${{ matrix.distro.type }}
          path: |
            ${GITHUB_WORKSPACE}/build/ziti-edge-tunnel-*.${{ matrix.distro.type }}
          if-no-files-found: error
